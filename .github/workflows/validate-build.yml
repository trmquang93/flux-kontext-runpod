name: Validate Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate-python:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install basic dependencies for validation
      run: |
        python -m pip install --upgrade pip
        # Install only essential packages for syntax validation
        pip install flake8 black isort

    - name: Validate Python syntax
      run: |
        echo "Checking Python syntax with flake8..."
        # Basic syntax check without style enforcement
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,__pycache__,.git
        echo "Python syntax validation passed!"

    - name: Check requirements.txt format
      run: |
        echo "Validating requirements.txt format..."
        if [ -f requirements.txt ]; then
          # Check for basic format issues
          grep -E "^[a-zA-Z0-9_-]+[>=<~]" requirements.txt > /dev/null || echo "Warning: Some requirements may have format issues"
          echo "Requirements.txt validation completed"
        else
          echo "No requirements.txt found"
          exit 1
        fi

    - name: Test Python import statements
      run: |
        echo "Testing critical import statements..."
        python -c "
        import sys
        import os
        import json
        import logging
        import traceback
        
        # Test that basic Python imports work
        try:
            import runpod
            print('✓ runpod import successful')
        except ImportError as e:
            print('⚠ runpod not available (expected in validation environment)')
        
        # Test other basic imports that should always work
        import base64
        import io
        import uuid
        import datetime
        print('✓ Basic Python imports successful')
        "

    - name: Validate project structure
      run: |
        echo "Validating project structure..."
        required_files=("Dockerfile" "requirements.txt" "handler.py")
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "✓ Found required file: $file"
          else
            echo "✗ Missing required file: $file"
            exit 1
          fi
        done
        echo "Project structure validation passed!"

  validate-docker-config:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate Dockerfile syntax
      run: |
        echo "Validating Dockerfile syntax..."
        if [ -f Dockerfile ]; then
          # Basic Dockerfile syntax validation
          docker run --rm -i hadolint/hadolint < Dockerfile || echo "Dockerfile has some warnings (non-critical)"
          echo "✓ Dockerfile syntax validation completed"
        else
          echo "✗ Dockerfile not found"
          exit 1
        fi

    - name: Check for sensitive information
      run: |
        echo "Scanning for potential sensitive information..."
        # Basic scan for common sensitive patterns
        if grep -r -i "password\|secret\|key\|token" --exclude-dir=.git --exclude="*.yml" --exclude="*.yaml" --exclude="*.md" . || true; then
          echo "⚠ Found potential sensitive information - please review"
        else
          echo "✓ No obvious sensitive information found"
        fi